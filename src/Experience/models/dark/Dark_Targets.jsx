/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 Dark_Targets.glb 
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import * as THREE from "three";
import gsap from "gsap";
import { useNavigate } from "react-router";

export default function Model(props) {
  let navigate = useNavigate();

  const { nodes } = useGLTF("/models/Dark Room/Dark_Targets.glb");

  const whiteMaterial = new THREE.MeshBasicMaterial({ color: 0xffffff });

  const aboutAnimRef = useRef();
  const devWorkAnimRef = useRef();

  const animationPairs = {
    About_Hitbox: { ref: aboutAnimRef },
    Dev_Work_Hitbox: { ref: devWorkAnimRef },
  };

  //Handle Hover
  const onHover = (key, isHovering) => {
    const animObject = animationPairs[key];
    gsap.to(animObject.ref.current.scale, {
      x: isHovering ? 1 : 0,
      y: isHovering ? 1 : 0,
      z: isHovering ? 1 : 0,
      duration: 0.5,
    });
  };

  return (
    <group {...props} dispose={null}>
      <mesh
        geometry={nodes.About_Hitbox.geometry}
        material={nodes.About_Hitbox.material}
        visible={false}
        position={[0.679, 1.571 - 0.02, -1.368]}
        onPointerOver={() => {
          onHover("About_Hitbox", true);
          document.body.style.cursor = "pointer";
        }}
        onPointerOut={() => {
          onHover("About_Hitbox", false);
          document.body.style.cursor = "auto";
        }}
        onClick={() => {
          navigate("/about");
        }}
      />
      <mesh
        ref={aboutAnimRef}
        geometry={nodes.About_Hitbox_Anim.geometry}
        material={whiteMaterial}
        scale={[0, 0, 0]}
        position={[0.679, 1.571 - 0.02, -1.368]}
      />
      <mesh
        geometry={nodes.Dev_Work_Hitbox.geometry}
        material={nodes.Dev_Work_Hitbox.material}
        visible={false}
        position={[-0.457, 0.597 - 0.02, 1.021]}
        onPointerOver={() => {
          onHover("Dev_Work_Hitbox", true);
          document.body.style.cursor = "pointer";
        }}
        onPointerOut={() => {
          onHover("Dev_Work_Hitbox", false);
          document.body.style.cursor = "auto";
        }}
        onClick={() => {
          navigate("/dev-work");
        }}
      />
      <mesh
        ref={devWorkAnimRef}
        geometry={nodes.Dev_Work_Hitbox_Anim.geometry}
        material={whiteMaterial}
        scale={[0, 0, 0]}
        position={[-1.298, 1.166, 1.75]}
      />
    </group>
  );
}

useGLTF.preload("/models/Dark Room/Dark_Targets.glb");
