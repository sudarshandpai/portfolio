/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 Light_Targets.glb 
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import * as THREE from "three";
import gsap from "gsap";
import { useNavigate } from "react-router";

export default function Model(props) {
  let navigate = useNavigate();
  const { nodes, materials } = useGLTF("/models/Light Room/Light_Targets.glb");

  const blackMaterial = new THREE.MeshBasicMaterial({ color: 0x000000 });

  const designWorkAnimRef = useRef();

  const animationPairs = {
    Design_Work_Hitbox: { ref: designWorkAnimRef },
  };

  const onHover = (key, isHovering) => {
    const animObject = animationPairs[key];
    gsap.to(animObject.ref.current.scale, {
      x: isHovering ? 1 : 0,
      y: isHovering ? 1 : 0,
      z: isHovering ? 1 : 0,
      duration: 0.5,
    });
  };

  return (
    <group {...props} dispose={null}>
      <mesh
        geometry={nodes.Design_Work_Hitbox.geometry}
        material={nodes.Design_Work_Hitbox.material}
        position={[24.434, 0.649, -1.105]}
        visible={false}
        onPointerOver={() => {
          onHover("Design_Work_Hitbox", true);
          document.body.style.cursor = "pointer";
        }}
        onPointerOut={() => {
          onHover("Design_Work_Hitbox", false);
          document.body.style.cursor = "auto";
        }}
        onClick={() => {
          navigate("/design-work");
        }}
      />
      <mesh
        ref={designWorkAnimRef}
        geometry={nodes.Design_Work_Hitbox_Anim.geometry}
        material={blackMaterial}
        position={[23.345, 1.267, -0.573]}
        scale={[0, 0, 0]}
      />
    </group>
  );
}

useGLTF.preload("/models/Light Room/Light_Targets.glb");
